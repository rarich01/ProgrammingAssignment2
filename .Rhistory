m <- matrix(1:4, nrow=2, ncol=2)
m
dimnames(m) <- list(c("a","b"),c("c","d"))
m
help c()
c
list
help(c)
c(1:5)
c(1:5,10.5)
c(1:5,10.5,"next")
help(mkdir)
help(cd)
help(touch)
help(pwd)
??mkdir
??cd
mkdir data
cd data
cd c:\
touch data
getwk()
getwd()
mkdir(data)
cd(data)
touch(data)
pwd(data)
pwd data
touch data
cd data
mkdir data
install.packages("Kernsmooth")
install.packages("KernSmooth")
library(KernSmooth)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
x <- 0
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
print "hello world"
print ("hello world")
f <- function(x){print(x)}
f("Hello World")
help(c)
rnorm(10)
rint(10)
help(sample)
sample(100,10)
matrix(sample(100,6,nrows=3,cols=2))
matrix(sample(100,6,nrow=3,col=2))
matrix(sample(100,6),nrow=3,col=2))
matrix(sample(100,6),nrow=3,col=2)
matrix(sample(100,6),nrow=3,ncol=2)
mtrx <- matrix(sample(100,6),nrow=3,ncol=2)
mtrx
inv(mtrx)
solve(mtrx)
mtrx <- matrix(sample(100,9),nrow=3,ncol=3)
mtrx
solve(mtrx)
source(cachematrix.R)
source("cachematrix.R")
setwd("C:/Code/Git/ProgrammingAssignment2")
source("cachematrix.R")
source("cachematrix.R")
mx <- matrix(sample(100,9),nrow=3,ncol=3)
mo <- makeCacheMatrix(mx)
cacheSolve(mo)
cacheSolve(mo)
